buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    dependencies {
        classpath group: 'pl.allegro.tech.build', name: 'axion-release-plugin', version: '1.3.4'
        classpath 'org.figurate:gradle-figurate-plugin:master-SNAPSHOT',
                'org.figurate:gradle-constellations-plugin:master-SNAPSHOT'
    }
}

plugins {
  id "org.sonarqube" version "1.2"
}

apply plugin: 'groovy'
apply plugin: 'osgi'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'pl.allegro.tech.build.axion-release'
apply plugin: 'figurate'
apply plugin: 'constellations'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
    // sonatype snapshots
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    bundle configurations.constellation$felix, // OSGi runtime
            configurations.constellation$webconsole, // OSGi dashboard application
            configurations.constellation$http, // embedded Jetty HTTP server
            configurations.constellation$rest, // REST support from Amdatu
            configurations.constellation$jackson, // JSON databinding support for the REST framework
            configurations.constellation$logback, // logging framework
            'org.codehaus.groovy:groovy-all:2.4.3' // Groovy runtime

    runtime configurations.constellation$logback

    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

javadoc {
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

scmVersion {
    tag {
        prefix = 'whistlepost'
    }
    versionCreator 'versionWithBranch'
}

group = 'org.mnode.whistlepost'
version = scmVersion.version
description = '''
A publishing platform based on Apache Sling
'''

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")

    // sonatype credentials
    sonatypeUsername = project.hasProperty('sonatypeUsername') ? project.getProperty('sonatypeUsername') : ''
    sonatypePassword = project.hasProperty('sonatypePassword') ? project.getProperty('sonatypePassword') : ''
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'Whistlepost'
                packaging 'jar'
                description project.description
                url 'https://whistlepost.github.io'

                scm {
                    url 'https://github.com/micronode/whistlepost'
                    connection 'scm:git@github.com:micronode/whistlepost.git'
                    developerConnection 'scm:git@github.com:micronode/whistlepost.git'
                }

                licenses {
                    license {
                        name 'Whistlepost - License'
                        url 'https://raw.githubusercontent.com/micronode/whistlepost/master/LICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'fortuna'
                        name 'Ben Fortuna'
                    }
                }
            }
        }
    }
}

launcherConfig {
    configProps << [
            'org.osgi.framework.bootdelegation': 'sun.misc',
            'org.osgi.framework.system.packages.extra': 'org.xml.sax,javax.xml',
            'org.osgi.framework.system.capabilities.extra': "osgi.ee; osgi.ee=\"JavaSE\";version:List=\"1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8\"",
            // use the next available port from 8080 onwards
            'org.osgi.service.http.port'        : '[8080,8099)',
            'org.apache.felix.http.jettyEnabled': 'true',
            'org.apache.felix.http.whiteboardEnabled': 'true',
            'org.apache.felix.http.debug'       : 'true'
    ]
}

